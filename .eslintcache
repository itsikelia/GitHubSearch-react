[{"C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\index.js":"1","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\reportWebVitals.js":"2","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\App.js":"3","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\store\\store.js":"4","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\components\\userList\\userList.js":"5","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\components\\user\\user.js":"6","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\components\\searchBar\\searchBar.js":"7","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\utils\\axiosHelper.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":692,"mtime":1610002733930,"results":"12","hashOfConfig":"10"},{"size":1279,"mtime":1610004856787,"results":"13","hashOfConfig":"10"},{"size":976,"mtime":1610052773291,"results":"14","hashOfConfig":"10"},{"size":997,"mtime":1610052686023,"results":"15","hashOfConfig":"10"},{"size":767,"mtime":1610053108890,"results":"16","hashOfConfig":"10"},{"size":116,"mtime":1610004841613,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1nthmeh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\index.js",[],["39","40"],"C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\reportWebVitals.js",[],"C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\App.js",["41"],"import React, { useContext } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { observer } from \"mobx-react\";\nimport { storeContext } from \"./store/store\";\nimport UserList from \"./components/userList/userList\";\nimport SearchBar from \"./components/searchBar/searchBar\";\n\nfunction App() {\n  const store = useContext(storeContext);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3>Welcome to usertron</h3>\n        <img id=\"git-icon\" src={logo} />\n        <SearchBar />\n        {store.totalUserFound && <h3>total users: {store.totalUserFound}</h3>}\n        <UserList />\n      </header>\n    </div>\n  );\n}\n\nexport default observer(App);\n","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\store\\store.js",["42"],"import { createContext } from \"react\";\r\nimport {\r\n  observable,\r\n  action,\r\n  runInAction,\r\n  configure,\r\n  makeObservable,\r\n} from \"mobx\";\r\nimport axios from \"axios\";\r\nimport { axiosConfig } from \"./../utils/axiosHelper\";\r\n\r\nconfigure({ enforceActions: \"observed\" });\r\nclass Store {\r\n  searchText = \"\";\r\n  users = [];\r\n  totalUserFound = null;\r\n  constructor() {\r\n    makeObservable(this, {\r\n      searchText: observable,\r\n      users: observable,\r\n      totalUserFound: observable,\r\n      setSearchText: action,\r\n      setUsers: action,\r\n      setTotalUserFound: action,\r\n      getDataFromGithubApi: action,\r\n    });\r\n  }\r\n  setSearchText = (newText) => {\r\n    this.searchText = newText;\r\n  };\r\n\r\n  setUsers = (newUsers) => {\r\n    this.users = [...newUsers];\r\n  };\r\n\r\n  setTotalUserFound = (newNumber) => {\r\n    this.totalUserFound = newNumber;\r\n  };\r\n\r\n  getDataFromGithubApi = () => {\r\n    this.setUsers([]);\r\n    axios\r\n      .get(\r\n        \"https://api.github.com/search/users?q=\" + this.searchText,\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        this.setTotalUserFound(response.data.total_count);\r\n        this.setUsers(response.data.items);\r\n      });\r\n  };\r\n}\r\n\r\nexport const store = new Store();\r\nexport const storeContext = createContext(store);\r\n","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\components\\userList\\userList.js",["43"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { storeContext } from \"./../../store/store\";\r\nimport User from \"../user/user\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst UserList = () => {\r\n  const store = useContext(storeContext);\r\n  const [hasMoreUsers, setHasMoreUsers] = useState(true);\r\n  const [currentIndex, setCurrentIndex] = useState(15);\r\n  const fetchMoreData = () => {\r\n    if (currentIndex >= store.users.length) {\r\n      setHasMoreUsers(false);\r\n      return;\r\n    }\r\n    setCurrentIndex(currentIndex + 5);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <InfiniteScroll\r\n        dataLength={currentIndex}\r\n        next={fetchMoreData}\r\n        hasMore={hasMoreUsers}\r\n      >\r\n        {store.users.slice(0, currentIndex).map((user) => (\r\n          <User userName={user.login} />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(UserList);\r\n","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\components\\user\\user.js",["44","45","46","47","48"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { storeContext } from \"./../../store/store\";\r\nimport axios from \"axios\";\r\nimport \"./user.css\";\r\nimport { axiosConfig } from \"./../../utils/axiosHelper\";\r\n\r\nconst User = (props) => {\r\n  const [userData, setUserData] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://api.github.com/users/\" + props.userName, {\r\n        axiosConfig,\r\n      })\r\n      .then((res) => setUserData(res.data))\r\n      .catch(() => {\r\n        setUserData({});\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(userData).length > 0 ? (\r\n        <div className=\"user\">\r\n          {userData.avatar_url && <img src={userData.avatar_url} />}\r\n          <span>{userData.name || userData.login}</span>\r\n          <div className=\"blog\">{userData.blog}</div>\r\n          <div className=\"bio\">{userData.bio}</div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\components\\searchBar\\searchBar.js",["49"],"C:\\Users\\ItsikElia\\Desktop\\GitHubSearch - React\\github-user-search\\src\\utils\\axiosHelper.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":15,"column":9,"nodeType":"56","endLine":15,"endColumn":41},{"ruleId":"57","severity":1,"message":"58","line":5,"column":3,"nodeType":"59","messageId":"60","endLine":5,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":1,"column":29,"nodeType":"59","messageId":"60","endLine":1,"endColumn":38},{"ruleId":"57","severity":1,"message":"62","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":27},{"ruleId":"57","severity":1,"message":"63","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":18},{"ruleId":"57","severity":1,"message":"64","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":19,"column":6,"nodeType":"67","endLine":19,"endColumn":8,"suggestions":"68"},{"ruleId":"54","severity":1,"message":"55","line":25,"column":35,"nodeType":"56","endLine":25,"endColumn":68},{"ruleId":"57","severity":1,"message":"69","line":1,"column":29,"nodeType":"59","messageId":"60","endLine":1,"endColumn":37},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'runInAction' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useContext' is defined but never used.","'observer' is defined but never used.","'storeContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.userName'. Either include it or remove the dependency array.","ArrayExpression",["72"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [props.userName]",{"range":"75","text":"76"},[580,582],"[props.userName]"]